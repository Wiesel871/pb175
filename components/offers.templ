package components

import "strconv"
import "math/rand"
import data "wiesel/pb175/database"

templ RangeOffers(offers *data.Offers, client, owner *data.User, salt string) {
    for _, offer := range *offers {
    <br/>
        <div class="grid" id={"offer" + strconv.FormatInt(offer.ID, 10)}>
            <div class="content"
            onmouseover="this.style.borderColor='white';" 
            onmouseout="this.style.borderColor='transparent';">
                <div 
                class="grid"
                hx-get={"/profile/" + strconv.FormatInt(offer.ID_owner, 10) +  "/offers/" + strconv.FormatInt(offer.ID, 10)} 
                hx-replace-url="true"
                hx-push-url="true"
                hx-trigger="click" 
                hx-target="#bod" >
                    <img 
                    src={
                        "/images/" + 
                        strconv.FormatInt(offer.ID_owner, 10) + 
                        "/" + strconv.FormatInt(offer.ID, 10) + ".jpeg" + salt}
                    style="object-fit: scale-down;"
                    />
                    <div class="container">
                    <span><h3>{ offer.Name }</h3></span>
                    <span> { offer.Description }</span>
                    </div>
                </div>
                <br/>
                <hr/>
            </div>
            if client.ID != -1 && owner.ID == client.ID {
                <div>
                    <button 
                    hx-target={"#offer" + strconv.FormatInt(offer.ID, 10)}
                    hx-delete={
                        "/profile/" + 
                        strconv.FormatInt(offer.ID_owner, 10) +  
                        "/offers/" + 
                        strconv.FormatInt(offer.ID, 10)} >
                    ðŸ—‘
                    </button>
                </div>
            }
        </div>
    }

}


templ SortsAndOffers(offers *data.Offers, owner, client *data.User, by, sc, filter, salt string) {
    <div class="grid">
        <details class="dropdown">
        <summary>Zorad podla</summary>
        <ul>
        <li><a class="link" hx-get={"/offers/ID/ASC/" + filter} hx-target="#bod">Datum pridania â†‘</a></li>
        <li><a class="link" hx-get={"/offers/ID/DESC/" + filter} hx-target="#bod">Datum pridania â†“</a></li>
        <li><a class="link" hx-get={"/offers/ID_owner/ASC/" + filter} hx-target="#bod">Autor â†‘</a></li>
        <li><a class="link" hx-get={"/offers/ID_owner/DESC/" + filter} hx-target="#bod">Autor â†“</a></li>
        <li><a class="link" hx-get={"/offers/Name/ASC/" + filter} hx-target="#bod">Nazov â†‘</a></li>
        <li><a class="link" hx-get={"/offers/Name/DESC/" + filter} hx-target="#bod">Nazov â†“</a></li>
        </ul>
        </details>
        <div/>
    </div>
    @RangeOffers(offers, client, owner, salt)
}

templ Offers(offers *data.Offers, owner, client *data.User, by, sc, filter string) {
    <div class="grid">
        <div class="container">
            <form
            hx-post={"/offers/" + by + "/" + sc}
            hx-target="#offers" 
            hx-trigger="input"
            hx-indicator=".loading">
            <input 
            style="margin-left: 5%;"
            type="search"
            name="filter"
            placeholder="Vyhladaj"
            aria-label="Search"
            value={filter}/>
            </form>

        </div>
        if client.ID != -1 && owner.ID == client.ID && len(*offers) < 10 {
        <div class="container">
            <button 
            hx-get="/add_offer" 
            hx-replace-url="true"
            hx-push-url="true"
            hx-target="#bod" >
            Add offer
            </button>
        </div>
        }
        <div/>
    </div>
    <div class="container" id="offers">
    @SortsAndOffers(offers, owner, client, by, sc, filter, "?" + strconv.Itoa(rand.Int())) 
    </div>
}

templ ChangeOffer(target *data.Offer, err string) {
    <form 
    hx-post={"/change_offer/" + strconv.FormatInt(target.ID, 10)} 
    hx-encoding="multipart/form-data" 
    hx-target="#bod">
    <input type="text" name="name" value={target.Name}></input>
    <hr/>
    <textarea name="desc">{target.Description}</textarea>
    <div class="grid">
        <div>
            <input type="file" name="photo"/>
        </div>
        <div class="container">
            <button type="submit">Vymen</button>
            <div>{err}</div>
        </div>
    </div>
    </form>
}

templ Offer(offer *data.Offer, owner, client *data.User, err string) {
    <div class="grid">
        <div>
        <img 
        src={"/images/" + strconv.FormatInt(offer.ID_owner, 10) + "/" + strconv.FormatInt(offer.ID, 10) + ".jpeg" } 
        style="object-fit: contain;"/>
        </div>

        <div class="container">
        if owner.ID != client.ID {
            <div><h1>{offer.Name}</h1></div>
            <div>{ offer.Description }</div>
        } else {
            @ChangeOffer(offer, err)
        }
        </div>
        <div/>
    </div>
}

templ NewOffer(client *data.User, err string) {
    <form 
        hx-post="/add_offer"
        hx-encoding="multipart/form-data"
        hx-target="#bod">
    <div class="grid">
        <div>
            <input type="file" name="photo"/>
        </div>
        <div class="container">
            <input type="text" name="name" placeholder="Nazov"/>
            <hr/>
            <textarea name="description" placeholder="Popis"></textarea>
            <button 
                type="submit">
                Uloz
            </button>
            <div>{err}</div>
        </div>
        <div/>
    </div>
    </form>
}
